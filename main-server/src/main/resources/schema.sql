drop table if exists user_events CASCADE;
drop table if exists locations CASCADE;
drop table if exists events CASCADE;
drop table if exists categories CASCADE;
drop table if exists users CASCADE;


create table if not exists users
(
    id    integer generated by default as identity
        constraint users_pk
            primary key,
    email varchar(254) not null
        unique,
    name  varchar(250) not null
        unique
);

alter table users
    owner to postgres;

create table if not exists categories
(
    id   integer generated always as identity
        constraint categories_pk
            primary key,
    name varchar(50) not null
        constraint categories_pk2
            unique
);

alter table categories
    owner to postgres;

create table if not exists locations
(
    id       integer generated always as identity
        constraint locations_pk
            primary key,
    lat      double precision not null,
    lon      double precision not null,
    event_id integer          not null
);

alter table locations
    owner to postgres;

create table if not exists events
(
    id                  integer generated always as identity
        constraint events_pk
            primary key,
    annotation          varchar(2000)         not null,
    category_id         integer               not null
        constraint events_categories_id_fk
            references categories
            on delete restrict,
    description         varchar(7000)         not null,
    "eventDate"         timestamp             not null,
    location_id         integer               not null
        constraint events_locations_id_fk
            references locations
            on update cascade on delete cascade,
    paid                boolean default false not null,
    "participantLimit"  integer default 0,
    "requestModeration" boolean default true  not null,
    title               varchar(120)          not null,
    initiator_id        integer               not null
        constraint events_users_id_fk
            references users
            on delete cascade,
    confirmed_requests  integer
        constraint events_users_id_fk2
            references users,
    created_on          timestamp             not null,
    published_on        timestamp             not null,
    state               varchar(50)
);

alter table events
    owner to postgres;

alter table locations
    add constraint locations_events_id_fk
        foreign key (event_id) references events
            on update cascade on delete cascade;

CREATE TABLE user_events (
    user_id INTEGER,
    event_id INTEGER,
    PRIMARY KEY(user_id, event_id),
    FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY(event_id) REFERENCES events(id) ON DELETE CASCADE
);